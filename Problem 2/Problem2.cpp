// MHS Project Euler Problem 2                              |
//                                                          |
// Problem statement:                                       |
//                                                          |
// Each new term in the Fibonacci sequence is generated by  |
// adding the previous two terms. By starting with 1 and 2, |
// the first 10 terms will be:                              |
//                                                          |
//          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...          |
//                                                          |
// By considering the terms in the Fibonacci sequence whose |
// values do not exceed four million (4*10^6), find the sum |
// of the even-valued terms.                                |
//-----------------------------------------------------------

// Generic Program:
// Use 4000000 as input for the above problem

#include <iostream>

using namespace std;

int main()
{
    int a = 1, b = 2, temp = 0, sum = 0;
    int range;

    cout << "Please enter a range of the Fibonacci sequence: ";
    cin >> range;

    while (b < range)
    {
        sum = sum +b;

        // An important pattern to note is that Even numbers
        // in the Fibonacci series occur after every 3 iterations
        // (which can be easily proved mathematically)
        // Therefore, an if statement can be avoided
        for (int i=0; i<3;i++)
        {
            temp = b;
            b = b + a;
            a = temp;
        }
    }
    cout<<"The sum of even valued Fibonacci terms up to "<<range<<" is: "<<sum<<endl;

    return 0;
}
